/**
 * @file Defines the models related to audience zone templates for structure areas.
 * @licence Proprietary
 * @author VotreNomOuEquipe
 */

import {SeatingType} from '../event/event-audience-zone.model';

/**
 * Represents a template for audience zones within a structure area.
 * These templates define the default configurations for audience zones
 * that can be used when creating events in this area.
 */
export interface AudienceZoneTemplateModel {
  /**
   * The unique identifier for the audience zone template.
   * Generated by the backend.
   */
  id: number;

  /**
   * The name of the audience zone template.
   * @example "Fosse Debout", "Balcon VIP", "Parterre Assis"
   */
  name: string;

  /**
   * The maximum capacity of this audience zone template.
   */
  maxCapacity: number;

  /**
   * The type of seating or placement offered in this zone template.
   */
  seatingType: SeatingType;

  /**
   * The identifier of the area this template belongs to.
   */
  areaId: number;

  /**
   * Indicates if the template is currently active and available for use.
   */
  active: boolean;
}

/**
 * Data Transfer Object for creating a new AudienceZoneTemplate.
 * 'id' is omitted as it will be generated by the backend.
 * 'areaId' will be provided contextually via URL parameter.
 */
export type AudienceZoneTemplateCreationDto = Omit<AudienceZoneTemplateModel, 'id' | 'areaId' | 'active'> & {
  /**
   * Use 'isActive' for creation to match API expectations.
   */
  isActive: boolean;
};

/**
 * Data Transfer Object for updating an existing AudienceZoneTemplate.
 * All properties are optional for partial updates.
 * 'id' and 'areaId' are typically not updatable.
 */
export type AudienceZoneTemplateUpdateDto = Partial<Omit<AudienceZoneTemplateModel, 'id' | 'areaId'>> & {
  /**
   * Use 'isActive' for updates to match API expectations.
   */
  isActive?: boolean;
};
