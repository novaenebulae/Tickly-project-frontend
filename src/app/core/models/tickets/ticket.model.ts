/**
 * @file Defines the core model for an individual event ticket.
 * @licence Proprietary
 * @author VotreNomOuEquipe
 */

import { TicketStatus } from './ticket-status.enum';
import { ParticipantInfoModel } from './participant-info.model';
import { EventModel } from '../event/event.model'; // For snapshot
import { EventAudienceZone } from '../event/event-audience-zone.model'; // For snapshot

/**
 * Represents an individual event ticket.
 */
export interface TicketModel {
  /**
   * The unique identifier for the ticket (e.g., a UUID).
   * Generated by the backend.
   */
  id: string;

  /**
   * The ID of the event this ticket is for.
   */
  eventId: number;

  /**
   * A snapshot of key event details at the time of booking.
   * Useful for display on the ticket PDF even if the main event details change later.
   */
  eventSnapshot: Pick<EventModel, 'name' | 'startDate' | 'endDate' | 'address'> & { mainPhotoUrl?: string };

  /**
   * The ID of the specific audience zone within the event this ticket grants access to.
   */
  audienceZoneId: number;

  /**
   * A snapshot of key audience zone details at the time of booking.
   */
  audienceZoneSnapshot: Pick<EventAudienceZone, 'name' | 'seatingType'>;

  /**
   * Information about the participant for whom this ticket is issued.
   */
  participantInfo: ParticipantInfoModel;

  /**
   * The data to be encoded into the QR code for scanning.
   * This is typically a unique URL or a structured string containing ticket ID and validation info.
   * The actual QR code image will be generated from this data.
   */
  qrCodeData: string;

  /**
   * The current status of the ticket.
   */
  status: TicketStatus;

  /**
   * The date and time when the ticket was issued.
   * Managed by the backend.
   */
  issuedAt: Date;

  /**
   * The date and time when the ticket was scanned and used for entry.
   * Optional, set by the backend upon successful scan.
   */
  usedAt?: Date;

  /**
   * Optional reference to the user who booked this ticket, if applicable.
   */
  bookedByUserId?: number;

  // No price information as per requirements.
}
