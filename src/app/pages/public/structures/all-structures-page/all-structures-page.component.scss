// Variables
$primary: #6c63ff;
$secondary: #4cc9f0;
$accent: #f72585;
$light: #f8f9fa;
$dark: #343a40;
$gray: #adb5bd;

  // En-tête de la page
  .header-section {
    background: linear-gradient(135deg, $primary, $secondary);
    color: $light;
    padding: 3rem 1.5rem;
    text-align: center;
    position: relative;
    overflow: hidden;
    width: 100%;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='rgba(255,255,255,0.05)' fill-rule='evenodd'/%3E%3C/svg%3E");
      opacity: 0.2;
    }

    .header-content {
      position: relative;
      z-index: 1;
      max-width: 1200px;
      margin: 0 auto;

      .title-section {
        animation: fadeInUp 0.8s ease-out;

        .main-title {
          font-size: 2.8rem;
          font-weight: 700;
          margin-bottom: 1rem;
          text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .subtitle {
          font-size: 1.2rem;
          font-weight: 300;
          margin-bottom: 0;
          max-width: 800px;
          margin: 0 auto;
        }
      }
    }
  }

    .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 2rem;
    color: $dark;
    position: relative;

    &:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: -0.5rem;
      width: 6rem;
      height: 4px;
      background: linear-gradient(to right, $primary, $secondary);
      border-radius: 2px;
    }
  }

// Styles de page
.structures-page {
  margin: 0 auto;
  padding: 2rem 0;
  width: 90vw;
}


// Pas de résultats
.no-results {
  text-align: center;
  padding: 4rem 2rem;
  background: $light;
  border-radius: 12px;

  i {
    font-size: 3rem;
    color: $gray;
    margin-bottom: 1rem;
  }

  h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: $dark;
  }

  p {
    color: $gray;
    max-width: 25rem;
    margin: 0 auto;
  }
}

.structures-container {
  .content-wrapper {
    position: relative;
    // On donne une hauteur minimale pour éviter que le paginator ne "saute" pendant le chargement initial.
    // 380px correspond environ à la hauteur d'une rangée de cartes. Ajustez si besoin.
    min-height: 380px;
  }

  .content-layer {
    // Superpose les deux couches
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;

    // Définit la transition sur l'opacité
    transition: opacity 0.4s ease-in-out;

    // Par défaut, la couche est invisible
    opacity: 0;
    pointer-events: none; // Empêche les clics sur la couche cachée
  }

  .content-layer.visible {
    // La rend visible et statique (pour la superposition z-index)
    position: static;
    opacity: 1;
    pointer-events: auto;
  }

  // Assure que la couche squelette est toujours positionnée de manière absolue
  // pour permettre à la couche de contenu réel de définir la hauteur du conteneur une fois visible.
  .skeleton-layer {
    position: absolute;
  }

  // La couche de contenu réel devient statique lorsqu'elle est visible,
  // ce qui permet au `content-wrapper` de s'adapter à sa hauteur.
  .real-content-layer.visible {
    position: static;
  }
}

// Pagination
mat-paginator {
  margin-top: 2rem;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}
