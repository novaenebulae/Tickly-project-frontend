// Using theme variables
$gap-between-cards: var(--spacing-md); // Espace entre les cartes

:host {
  // Utilise la variable CSS liée depuis le TS
  --cards-per-page-dynamic: var(--cards-per-page, 3); // Valeur par défaut si non fournie
}

.events-carousel {
  position: relative;
  padding: var(--spacing-lg) 0; // Padding vertical, horizontal géré par les contrôles
  border-radius: var(--border-radius-medium);
  box-shadow: var(--shadow-sm);

  &__viewport {
    overflow: hidden; // Masque les cartes qui ne sont pas dans la "page" actuelle
    margin: 0 var(--spacing-xl); // Laisse de la place pour les flèches sur les côtés
  }

  &__slides {
    display: flex;
    // La largeur totale est la somme des largeurs de toutes les cartes.
    // Elle sera plus grande que 100% si cardsPerPage < events.length.
    // Chaque "page" (groupe de cardsPerPage) occupera 100% de la largeur du viewport.
    // La transition se fait sur ce conteneur global.
    transition: transform 0.4s ease-in-out;
    padding: var(--spacing-md) 0;
  }

  &__slide-item {
    // Chaque carte (ou son wrapper) prend une fraction de la largeur du viewport.
    // Le HostBinding dans le TS rend --cards-per-page-dynamic disponible.
    flex: 0 0 calc(100% / var(--cards-per-page-dynamic));
    box-sizing: border-box;
    padding: 0 calc($gap-between-cards / 2); // Applique le gap de chaque côté de la carte

    // Pour s'assurer que la première et la dernière carte n'ont pas de padding vers l'extérieur du groupe visible
    &:first-child {
      padding-left: 0;
    }
    &:last-child {
      padding-right: 0;
    }
  }

  &__control {
    position: absolute;
    top: 50%;
    width: 64px;
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    border-radius: 50%;
    z-index: 10;
    transition: var(--transition-medium);
    box-shadow: var(--shadow-sm);

    &:hover {
      background: rgba(255, 255, 255, 0.4);
      box-shadow: var(--shadow-md);
      transform: translateY(-50%) scale(1.05);
    }

    &--prev {
      left: -50px;
      transform: translate(20%, -50%);
    }

    &--next {
      right: -50px;
      transform: translate(-20%, -50%);
    }

    mat-icon {
      font-size: 28px;
      height: 28px;
      width: 28px;
      color: var(--primary);
      display: flex;
      align-items: center;
      justify-content: center;
      line-height: 1;
    }
  }

  &__indicators {
    text-align: center;
    margin-top: var(--spacing-lg);
  }

  &__indicator {
    display: inline-block;
    width: 12px; // Indicateurs un peu plus grands
    height: 12px;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.3); // Inactive indicator color
    border: none;
    margin: 0 var(--spacing-xs);
    cursor: pointer;
    transition: var(--transition-fast);

    &--active {
      background-color: var(--accent);
      transform: scale(1.1);
    }
    &:hover:not(&--active) {
      background-color: rgba(0, 0, 0, 0.5); // Slightly darker on hover
    }
  }
}

// Styles responsives pour ajuster le nombre de cartes
@media (max-width: 1200px) {
  :host {
    --cards-per-page-dynamic: var(--cards-per-page, 2); // 2 cartes sur écrans moyens
  }
}

@media (max-width: 768px) {
  :host {
    --cards-per-page-dynamic: var(--cards-per-page, 1); // 1 carte sur petits écrans
  }
  .events-carousel {
    padding: var(--spacing-md) 0;

    &__viewport {
      margin: 0 var(--spacing-sm); // Moins de marge pour les flèches
    }

    &__slide-item {
      padding: 0 calc($gap-between-cards / 3);
    }

    &__control {
      display: none;
      // Les styles de mat-icon-button peuvent suffire, sinon ajuster
      mat-icon {
        font-size: 28px;
        height: 28px;
        width: 28px;
      }
    }
  }
}
